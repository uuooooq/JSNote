{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["Content","Layout","httpPre","window","location","host","imgPre","uploadUrl","storage","localStorage","removeItem","tmpListData","JSON","parse","getItem","setItem","stringify","App","props","state","value","myData","inputValue","onChange","e","console","log","target","setState","onKeyDown","keyCode","ctrlKey","event","preventDefault","cancelBubble","onSave","searchData","fileInput","React","createRef","this","fetchData","document","addEventListener","removeEventListener","length","sendToServer","fetch","then","response","ok","json","Error","status","data","catch","error","requestFailed","valueStr","url","formData","FormData","append","method","body","type","height","src","alert","form","fileObj","current","files","offsetTop","style","display","width","flexDirection","backgroundColor","justifyContent","alignItems","name","ref","onClick","onSaveFile","bind","handleChange","placeholder","flexGrow","flex","itemLayout","dataSource","size","renderItem","item","marginRight","marginLeft","padding","createTextDisplay","pagination","page","pageSize","Component","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.d13e48ea.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport { Affix, Button, List, Divider, Radio, Upload, message } from 'antd';\nimport { Layout } from 'antd';\nimport TextareaAutosize from 'react-textarea-autosize';\nimport 'antd/dist/antd.css';\nconst { Content } = Layout;\n//import { Upload, message, Button } from 'antd';\n//import { UploadOutlined } from '@ant-design/icons';\n\n\nconst httpPre = 'http://'+window.location.host \n//const httpPre = 'http://192.168.1.12:8080'\nconst imgPre = httpPre + '/file?imageName='\nconst uploadUrl = httpPre + '/upload'\n\nvar listData = [];\n\n\nvar storage = window.localStorage\nif (storage) {\n  storage.removeItem('personalStorage')\n  var tmpListData = JSON.parse(storage.getItem('personalStorageNew'))\n  if (!tmpListData) {\n    storage.setItem('personalStorageNew', JSON.stringify(listData))\n  }\n\n}\n\n\n\n\nexport default class App extends React.Component {\n\n  state = {\n    value: 1,\n    myData: [],\n    inputValue: '',\n  };\n\n\n  constructor(props){\n    super(props);\n    this.fileInput = React.createRef();\n  }\n\n\n  onChange = e => {\n    console.log('radio checked1', e.target.value);\n    this.setState({\n      value: e.target.value,\n    });\n  };\n\n\n\n  componentWillMount() {\n    this.fetchData()\n    document.addEventListener(\"keydown\", this.onKeyDown)\n\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.onKeyDown)\n  }\n\n  onKeyDown = (e) => {\n    // eslint-disable-next-line default-case\n    console.log('you press key ' + e.keyCode)\n    // switch( e.keyCode) {\n    //   case 13://回车事件\n    //     break\n    //   default:\n    //     break\n    // }\n    if (83 == e.keyCode && e.ctrlKey) {\n      window.event.preventDefault()//\n      window.event.cancelBubble = true//IE\n      this.onSave();\n      console.log('you press key keydown ' + e.keyCode)\n    }\n    if (67 == e.keyCode && e.ctrlKey) {\n      window.event.preventDefault()//\n      window.event.cancelBubble = true//IE\n      this.setState({\n        inputValue: '',\n      })\n      console.log('you press key keydown ' + e.keyCode)\n    }\n    if (70 == e.keyCode && e.ctrlKey) {\n      window.event.preventDefault()//\n      window.event.cancelBubble = true//IE\n      this.setState({\n        myData: [],\n      })\n      this.searchData()\n      console.log('you press key keydown ' + e.keyCode)\n    }\n  }\n\n  handleChange(e) {\n    // console.log(e.target.value)\n    this.setState({\n      inputValue: e.target.value\n    })\n  }\n\n  onSave(e) {\n\n    if (this.state.inputValue.length < 1) {\n      return;\n    }\n\n    this.sendToServer(this.state.inputValue)\n    //this.state.myData.\n    if (tmpListData) {\n      this.setState({\n        inputValue: '',\n      })\n    }\n  }\n\n  fetchData() {\n    fetch(httpPre + '/hello?start=0&end=100')\n      .then((response) => {\n        if (!response.ok) throw new Error(response.status);\n        else return response.json();\n      })\n      .then((data) => {\n        this.setState({ myData: data });\n        console.log(data);\n      })\n      .catch((error) => {\n        console.log('error: ' + error);\n        this.setState({ requestFailed: true });\n      });\n\n  }\n\n  searchData() {\n    fetch(httpPre + '/search?searchWord=' + this.state.inputValue).then((response) => {\n      if (!response.ok) throw new Error(response.status);\n      else return response.json();\n    })\n      .then((data) => {\n        this.setState({ myData: data });\n        console.log(data);\n      })\n      .catch((error) => {\n        console.log('error: ' + error);\n        this.setState({ requestFailed: true });\n      });\n  }\n\n  sendToServer(valueStr) {\n    let url = httpPre//\"http://192.168.1.6:8080\";\n    let formData = new FormData();\n\n    formData.append('value', valueStr);\n\n    fetch(url, {\n      method: 'post',\n      body: formData,\n    }).then((response) => {\n      if (!response.ok) throw new Error(response.status);\n      else return response.json();\n    })\n      .then((data) => {\n        this.setState({ myData: data });\n        console.log(data);\n      })\n      .catch((error) => {\n        console.log('error: ' + error);\n        //this.setState({ requestFailed: true });\n      });\n  }\n\n  createTextDisplay(value) {\n\n    if (value.type == '2' || value.type.inputValue == 2) {\n      return (\n        <div>\n          <img height={360} src={imgPre + value.value} />\n        </div>\n      )\n    }\n    else {\n      return (\n        <div>\n          <pre>{value.value}</pre>\n\n        </div>\n      );\n    }\n\n\n  }\n\n  onSaveFile(e) {\n    alert('hello world');\n    var form = new FormData()\n\n    var fileObj = this.fileInput.current.files[0] //document.getElementById(\"file\").files[0]\n\n    form.append(\"files[]\", fileObj) //uploadFile为后台给的参数名\n\n    fetch(uploadUrl, {\n\n      method: 'POST',\n\n      body: form,\n\n    }).then(function (response) {\n\n        return response.json();\n        alert('上传成功')\n      }).then((e) => {\n\n        console.log(e)\n        alert('上传失败'+e)\n      })\n  }\n\n\n\n\n\n  render() {\n\n    return (\n\n      <div>\n        <Layout>\n          <Content>\n            <Affix offsetTop={0} >\n              <div style={{ display: 'flex', width: '100%', flexDirection: 'column' }}>\n                <div style={{ display: 'flex', width: '100%', backgroundColor: 'white', flexDirection: 'row', justifyContent: 'flex-end', alignItems: 'baseline' }}>\n                  {/* <Button onClick={this.onSaveFile.bind(this)}>添加文件</Button> */}\n                  <div>\n                  <input type=\"file\" name='file' ref={this.fileInput}/>\n                <input type=\"button\" value=\"上传\" onClick={this.onSaveFile.bind(this)}/>\n                  </div>\n                  <Button>取消(ctrl+c)</Button>\n                  <Button onClick={this.onSave.bind(this)} >保存(ctrl+s)</Button>\n                </div>\n                <div style={{ display: 'flex', width: '100%', backgroundColor: 'gray', flexDirection: 'row' }}>\n                  <TextareaAutosize onChange={this.handleChange.bind(this)} placeholder=\"请输入内容\" value={this.state.inputValue} style={{ flexGrow: '1' }} />\n                </div>\n\n              </div>\n            </Affix>\n            <div style={{ display: 'flex', flex: '1', flexDirection: 'column', backgroundColor: 'white' }}>\n              <List\n                itemLayout=\"horizontal\"\n                dataSource={this.state.myData}\n                size=\"large\"\n                renderItem={item => (\n                  <div style={{ display: 'flex', flex: '1', flexDirection: 'column', marginRight: 200, marginLeft: 200 }}>\n                    <div style={{ display: 'flex', flex: '1', padding: '10px' }}>\n                      {this.createTextDisplay(item)}\n                    </div>\n\n                    <Divider></Divider>\n                  </div>\n\n                )}\n                pagination={{\n                  onChange: page => {\n                    console.log(page);\n                  },\n                  pageSize: 30,\n                }}\n              />\n            </div>\n\n\n          </Content>\n\n        </Layout>\n\n      </div>\n    );\n  }\n}\n\n//<pre>{item.value}</pre>","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}